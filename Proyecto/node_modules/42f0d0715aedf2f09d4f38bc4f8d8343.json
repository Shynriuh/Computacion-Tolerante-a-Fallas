{"ast":null,"code":"import _classCallCheck from \"D:\\\\karen\\\\Desktop\\\\Proyecto\\\\node-doc-kube\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\karen\\\\Desktop\\\\Proyecto\\\\node-doc-kube\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\karen\\\\Desktop\\\\Proyecto\\\\node-doc-kube\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\karen\\\\Desktop\\\\Proyecto\\\\node-doc-kube\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\karen\\\\Desktop\\\\Proyecto\\\\node-doc-kube\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\karen\\\\Desktop\\\\Proyecto\\\\node-doc-kube\\\\src\\\\components\\\\App.js\";\nimport React, { Component } from 'react';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport '../css/App.css';\nvar redirectTarget = process.env.NODE_ENV === 'development' ? 'http://localhost:5500' : process.env.REACT_APP_HOST;\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      value: \"\",\n      validUrl: true,\n      encodedUrlReady: false,\n      encodedUrl: \"\",\n      copied: false\n    };\n\n    _this.handleChange = function (event) {\n      _this.setState({\n        value: event.target.value\n      });\n    };\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n      var data = {\n        originalUrl: _this.refs['new-url'].value\n      };\n      fetch(\"\".concat(redirectTarget, \"/encode\"), {\n        method: 'POST',\n        body: JSON.stringify(data),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(function (response) {\n        // console.log(response);\n        if (response.ok) {\n          response.json().then(function (json) {\n            if (json === \"Try again\") {\n              _this.setState({\n                validUrl: false\n              });\n            } else {\n              var path = json.catpath;\n\n              _this.setState({\n                encodedUrlReady: true,\n                validUrl: true,\n                encodedUrl: \"\".concat(redirectTarget, \"/\").concat(path)\n              });\n            }\n          });\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"nav\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"/\",\n        className: \"nav-brand\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"catURL\")), React.createElement(\"a\", {\n        href: \"https://github.com/postmanlabs/node-doc-kube\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"snipe\",\n        src: \"https://camo.githubusercontent.com/a6677b08c955af8400f44c6298f40e7d19cc5b2d/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f6769746875622f726962626f6e732f666f726b6d655f72696768745f677261795f3664366436642e706e67\",\n        alt: \"Fork me on GitHub\",\n        \"data-canonical-src\": \"https://s3.amazonaws.com/github/ribbons/forkme_right_gray_6d6d6d.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"guts\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"message-contents\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        id: \"encoder\",\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"submit-encoder\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"enter an original url to create a custom cat url: \"), React.createElement(\"input\", {\n        type: \"text\",\n        id: \"notes\",\n        className: \"encode-text\",\n        ref: \"new-url\",\n        value: this.state.value,\n        placeholder: \"http://www.google.com\",\n        onChange: this.handleChange,\n        autoFocus: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        className: \"btn submit-btn\",\n        value: \"cattify\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      })))), !this.state.validUrl ? React.createElement(\"div\", {\n        className: \"error-message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Please enter a valid URL.\")) : null, this.state.encodedUrlReady && this.state.validUrl ? React.createElement(\"div\", {\n        className: \"display-contents\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"display-intro\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"is now: \")), React.createElement(\"div\", {\n        className: \"display\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: this.state.copied ? \"copied new-url\" : \"new-url\",\n        value: this.state.encodedUrl,\n        readOnly: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }), React.createElement(CopyToClipboard, {\n        text: this.state.encodedUrl,\n        className: \"btn copy-btn\",\n        onCopy: function onCopy() {\n          return _this2.setState({\n            copied: true\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"copy\")))) : null, React.createElement(\"div\", {\n        id: \"attribution\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"created by: \", React.createElement(\"a\", {\n        href: \"https://github.com/postmanlabs\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"Postman\")), React.createElement(\"div\", {\n        className: \"disclaimer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"Intended for entertainment use only. No guarantees made. No one endorses anything contained in the URLs.\", React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \" \", \"\\n\", \"\\n\", \" \"), \"CatURL is not responsible for any content linked through its service. Use at your own risk.  It's a litter bit amazing.\"))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["D:\\karen\\Desktop\\Proyecto\\node-doc-kube\\src\\components\\App.js"],"names":["React","Component","CopyToClipboard","redirectTarget","process","env","NODE_ENV","REACT_APP_HOST","App","state","value","validUrl","encodedUrlReady","encodedUrl","copied","handleChange","event","setState","target","handleSubmit","preventDefault","data","originalUrl","refs","fetch","method","body","JSON","stringify","headers","then","response","ok","json","path","catpath"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\nimport '../css/App.css';\r\n\r\nconst redirectTarget = process.env.NODE_ENV === 'development' ? 'http://localhost:5500' : process.env.REACT_APP_HOST;\r\n\r\nclass App extends Component {\r\n\r\n  state = {\r\n    value: \"\", \r\n    validUrl: true,\r\n    encodedUrlReady: false,\r\n    encodedUrl: \"\",\r\n    copied: false\r\n  }\r\n  \r\n  handleChange = (event) => {\r\n    this.setState({\r\n      value: event.target.value\r\n    });\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    let data = {\r\n      originalUrl: this.refs['new-url'].value\r\n    };\r\n\r\n    fetch(`${redirectTarget}/encode`, {\r\n      method: 'POST',\r\n      body: JSON.stringify(data),\r\n      headers:{\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then(response => {\r\n      // console.log(response);\r\n      if (response.ok) {\r\n        response.json().then(json => {\r\n          if (json === \"Try again\") {\r\n            this.setState({\r\n              validUrl: false\r\n            });\r\n          } else {\r\n            let path = json.catpath;\r\n            this.setState({\r\n              encodedUrlReady: true,\r\n              validUrl: true,\r\n              encodedUrl: `${redirectTarget}/${path}`\r\n            })\r\n          }\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n\r\n        <div className=\"nav\">\r\n          <a href=\"/\" className=\"nav-brand\">catURL</a>\r\n        </div>\r\n\r\n        <a href=\"https://github.com/postmanlabs/node-doc-kube\">\r\n          <img className=\"snipe\" src=\"https://camo.githubusercontent.com/a6677b08c955af8400f44c6298f40e7d19cc5b2d/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f6769746875622f726962626f6e732f666f726b6d655f72696768745f677261795f3664366436642e706e67\" alt=\"Fork me on GitHub\" data-canonical-src=\"https://s3.amazonaws.com/github/ribbons/forkme_right_gray_6d6d6d.png\" />\r\n        </a>\r\n\r\n        <div className=\"guts\">\r\n\r\n          <div className=\"message-contents\">\r\n            <form id=\"encoder\" onSubmit={this.handleSubmit}>\r\n              <div className=\"submit-encoder\">\r\n                <h3>enter an original url to create a custom cat url: </h3>\r\n                <input type=\"text\" id=\"notes\" className=\"encode-text\" ref=\"new-url\" value={this.state.value} placeholder=\"http://www.google.com\" onChange={this.handleChange} autoFocus />\r\n                <input type=\"submit\" className=\"btn submit-btn\" value=\"cattify\" />\r\n              </div>\r\n            </form>\r\n          </div>\r\n\r\n          {!this.state.validUrl ?\r\n            <div className=\"error-message\">\r\n              <h3>Please enter a valid URL.</h3>\r\n            </div>\r\n            : null } \r\n\r\n          {this.state.encodedUrlReady && this.state.validUrl ?\r\n            <div className=\"display-contents\">\r\n              <div className='display-intro'>\r\n                  <h3>is now: </h3>\r\n              </div>\r\n              <div className=\"display\">\r\n                  <input type=\"text\" className={this.state.copied ? \"copied new-url\" : \"new-url\"} value={this.state.encodedUrl} readOnly />\r\n\r\n                  <CopyToClipboard text={this.state.encodedUrl}\r\n                    className=\"btn copy-btn\"\r\n                    onCopy={() => this.setState({copied: true})}>\r\n                    <button>copy</button>\r\n                  </CopyToClipboard>\r\n\r\n              </div>\r\n            </div>\r\n            : null }\r\n\r\n          <div id=\"attribution\">created by: <a href='https://github.com/postmanlabs'>Postman</a></div>\r\n          <div className='disclaimer'>\r\n            <span>Intended for entertainment use only. No guarantees made. No one endorses anything contained in the URLs. \r\n              <p> {\"\\n\"}{\"\\n\"} </p>\r\n              CatURL is not responsible for any content linked through its service. Use at your own risk.  It's a litter bit amazing.\r\n            </span>\r\n          </div>\r\n        \r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}